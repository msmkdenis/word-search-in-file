// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/msmkdenis/word-search-in-file/internal/service (interfaces: IndexCache)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIndexCache is a mock of IndexCache interface.
type MockIndexCache struct {
	ctrl     *gomock.Controller
	recorder *MockIndexCacheMockRecorder
}

// MockIndexCacheMockRecorder is the mock recorder for MockIndexCache.
type MockIndexCacheMockRecorder struct {
	mock *MockIndexCache
}

// NewMockIndexCache creates a new mock instance.
func NewMockIndexCache(ctrl *gomock.Controller) *MockIndexCache {
	mock := &MockIndexCache{ctrl: ctrl}
	mock.recorder = &MockIndexCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIndexCache) EXPECT() *MockIndexCacheMockRecorder {
	return m.recorder
}

// GetFiles mocks base method.
func (m *MockIndexCache) GetFiles(arg0, arg1 string) ([]string, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFiles", arg0, arg1)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetFiles indicates an expected call of GetFiles.
func (mr *MockIndexCacheMockRecorder) GetFiles(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFiles", reflect.TypeOf((*MockIndexCache)(nil).GetFiles), arg0, arg1)
}

// SetIndex mocks base method.
func (m *MockIndexCache) SetIndex(arg0 string, arg1 map[string][]string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetIndex", arg0, arg1)
}

// SetIndex indicates an expected call of SetIndex.
func (mr *MockIndexCacheMockRecorder) SetIndex(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetIndex", reflect.TypeOf((*MockIndexCache)(nil).SetIndex), arg0, arg1)
}
